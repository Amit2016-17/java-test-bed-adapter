/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package eu.driver.model.cap;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Info extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4206407443055078330L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Info\",\"namespace\":\"eu.driver.model.cap\",\"fields\":[{\"name\":\"language\",\"type\":[\"string\",\"null\"],\"default\":\"en-US\"},{\"name\":\"category\",\"type\":[{\"type\":\"enum\",\"name\":\"Category\",\"symbols\":[\"Geo\",\"Met\",\"Safety\",\"Security\",\"Rescue\",\"Fire\",\"Health\",\"Env\",\"Transport\",\"Infra\",\"CBRNE\",\"Other\"]},{\"type\":\"array\",\"items\":\"Category\"}]},{\"name\":\"event\",\"type\":\"string\"},{\"name\":\"responseType\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"ResponseType\",\"symbols\":[\"Shelter\",\"Evacuate\",\"Prepare\",\"Execute\",\"Avoid\",\"Monitor\",\"Assess\",\"AllClear\",\"None\"]},{\"type\":\"array\",\"items\":\"ResponseType\"}],\"default\":null},{\"name\":\"urgency\",\"type\":{\"type\":\"enum\",\"name\":\"Urgency\",\"symbols\":[\"Immediate\",\"Expected\",\"Future\",\"Past\",\"Unknown\"]}},{\"name\":\"severity\",\"type\":{\"type\":\"enum\",\"name\":\"Severity\",\"symbols\":[\"Extreme\",\"Severe\",\"Moderate\",\"Minor\",\"Unknown\"]}},{\"name\":\"certainty\",\"type\":{\"type\":\"enum\",\"name\":\"Certainty\",\"symbols\":[\"Observed\",\"Likely\",\"Possible\",\"Unlikely\",\"Unknown\"]}},{\"name\":\"audience\",\"type\":[\"null\",\"string\"],\"default\":\"null\"},{\"name\":\"eventCode\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ValueNamePair\",\"fields\":[{\"name\":\"valueName\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}]},{\"type\":\"array\",\"items\":\"ValueNamePair\"}],\"default\":null},{\"name\":\"effective\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO: datetime\",\"default\":\"null\"},{\"name\":\"onset\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO: datetime\",\"default\":\"null\"},{\"name\":\"expires\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO: datetime\",\"default\":\"null\"},{\"name\":\"senderName\",\"type\":[\"null\",\"string\"],\"default\":\"null\"},{\"name\":\"headline\",\"type\":[\"null\",\"string\"],\"default\":\"null\"},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":\"null\"},{\"name\":\"instruction\",\"type\":[\"null\",\"string\"],\"default\":\"null\"},{\"name\":\"web\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO: anyURI\",\"default\":\"null\"},{\"name\":\"contact\",\"type\":[\"null\",\"string\"],\"default\":\"null\"},{\"name\":\"parameter\",\"type\":[\"null\",\"ValueNamePair\",{\"type\":\"array\",\"items\":\"ValueNamePair\"}],\"default\":null},{\"name\":\"resource\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Resource\",\"fields\":[{\"name\":\"resourceDesc\",\"type\":\"string\"},{\"name\":\"size\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"uri\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO, anyURI\",\"default\":\"null\"},{\"name\":\"deferUri\",\"type\":[\"null\",\"string\"],\"default\":\"null\"},{\"name\":\"digest\",\"type\":[\"null\",\"string\"],\"default\":\"null\"}]},{\"type\":\"array\",\"items\":\"Resource\"}],\"default\":null},{\"name\":\"area\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Area\",\"fields\":[{\"name\":\"areaDesc\",\"type\":\"string\"},{\"name\":\"polygon\",\"type\":[\"null\",\"string\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"circle\",\"type\":[\"null\",\"string\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"geocode\",\"type\":[\"null\",\"ValueNamePair\",{\"type\":\"array\",\"items\":\"ValueNamePair\"}],\"default\":null},{\"name\":\"altitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"ceiling\",\"type\":[\"null\",\"double\"],\"default\":null}]},{\"type\":\"array\",\"items\":\"Area\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Info> ENCODER =
      new BinaryMessageEncoder<Info>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Info> DECODER =
      new BinaryMessageDecoder<Info>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Info> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Info> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Info>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Info to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Info from a ByteBuffer. */
  public static Info fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence language;
  @Deprecated public java.lang.Object category;
  @Deprecated public java.lang.CharSequence event;
  @Deprecated public java.lang.Object responseType;
  @Deprecated public eu.driver.model.cap.Urgency urgency;
  @Deprecated public eu.driver.model.cap.Severity severity;
  @Deprecated public eu.driver.model.cap.Certainty certainty;
  @Deprecated public java.lang.CharSequence audience;
  @Deprecated public java.lang.Object eventCode;
  /** TODO: datetime */
  @Deprecated public java.lang.CharSequence effective;
  /** TODO: datetime */
  @Deprecated public java.lang.CharSequence onset;
  /** TODO: datetime */
  @Deprecated public java.lang.CharSequence expires;
  @Deprecated public java.lang.CharSequence senderName;
  @Deprecated public java.lang.CharSequence headline;
  @Deprecated public java.lang.CharSequence description;
  @Deprecated public java.lang.CharSequence instruction;
  /** TODO: anyURI */
  @Deprecated public java.lang.CharSequence web;
  @Deprecated public java.lang.CharSequence contact;
  @Deprecated public java.lang.Object parameter;
  @Deprecated public java.lang.Object resource;
  @Deprecated public java.lang.Object area;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Info() {}

  /**
   * All-args constructor.
   * @param language The new value for language
   * @param category The new value for category
   * @param event The new value for event
   * @param responseType The new value for responseType
   * @param urgency The new value for urgency
   * @param severity The new value for severity
   * @param certainty The new value for certainty
   * @param audience The new value for audience
   * @param eventCode The new value for eventCode
   * @param effective TODO: datetime
   * @param onset TODO: datetime
   * @param expires TODO: datetime
   * @param senderName The new value for senderName
   * @param headline The new value for headline
   * @param description The new value for description
   * @param instruction The new value for instruction
   * @param web TODO: anyURI
   * @param contact The new value for contact
   * @param parameter The new value for parameter
   * @param resource The new value for resource
   * @param area The new value for area
   */
  public Info(java.lang.CharSequence language, java.lang.Object category, java.lang.CharSequence event, java.lang.Object responseType, eu.driver.model.cap.Urgency urgency, eu.driver.model.cap.Severity severity, eu.driver.model.cap.Certainty certainty, java.lang.CharSequence audience, java.lang.Object eventCode, java.lang.CharSequence effective, java.lang.CharSequence onset, java.lang.CharSequence expires, java.lang.CharSequence senderName, java.lang.CharSequence headline, java.lang.CharSequence description, java.lang.CharSequence instruction, java.lang.CharSequence web, java.lang.CharSequence contact, java.lang.Object parameter, java.lang.Object resource, java.lang.Object area) {
    this.language = language;
    this.category = category;
    this.event = event;
    this.responseType = responseType;
    this.urgency = urgency;
    this.severity = severity;
    this.certainty = certainty;
    this.audience = audience;
    this.eventCode = eventCode;
    this.effective = effective;
    this.onset = onset;
    this.expires = expires;
    this.senderName = senderName;
    this.headline = headline;
    this.description = description;
    this.instruction = instruction;
    this.web = web;
    this.contact = contact;
    this.parameter = parameter;
    this.resource = resource;
    this.area = area;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return language;
    case 1: return category;
    case 2: return event;
    case 3: return responseType;
    case 4: return urgency;
    case 5: return severity;
    case 6: return certainty;
    case 7: return audience;
    case 8: return eventCode;
    case 9: return effective;
    case 10: return onset;
    case 11: return expires;
    case 12: return senderName;
    case 13: return headline;
    case 14: return description;
    case 15: return instruction;
    case 16: return web;
    case 17: return contact;
    case 18: return parameter;
    case 19: return resource;
    case 20: return area;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: language = (java.lang.CharSequence)value$; break;
    case 1: category = (java.lang.Object)value$; break;
    case 2: event = (java.lang.CharSequence)value$; break;
    case 3: responseType = (java.lang.Object)value$; break;
    case 4: urgency = (eu.driver.model.cap.Urgency)value$; break;
    case 5: severity = (eu.driver.model.cap.Severity)value$; break;
    case 6: certainty = (eu.driver.model.cap.Certainty)value$; break;
    case 7: audience = (java.lang.CharSequence)value$; break;
    case 8: eventCode = (java.lang.Object)value$; break;
    case 9: effective = (java.lang.CharSequence)value$; break;
    case 10: onset = (java.lang.CharSequence)value$; break;
    case 11: expires = (java.lang.CharSequence)value$; break;
    case 12: senderName = (java.lang.CharSequence)value$; break;
    case 13: headline = (java.lang.CharSequence)value$; break;
    case 14: description = (java.lang.CharSequence)value$; break;
    case 15: instruction = (java.lang.CharSequence)value$; break;
    case 16: web = (java.lang.CharSequence)value$; break;
    case 17: contact = (java.lang.CharSequence)value$; break;
    case 18: parameter = (java.lang.Object)value$; break;
    case 19: resource = (java.lang.Object)value$; break;
    case 20: area = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'language' field.
   * @return The value of the 'language' field.
   */
  public java.lang.CharSequence getLanguage() {
    return language;
  }

  /**
   * Sets the value of the 'language' field.
   * @param value the value to set.
   */
  public void setLanguage(java.lang.CharSequence value) {
    this.language = value;
  }

  /**
   * Gets the value of the 'category' field.
   * @return The value of the 'category' field.
   */
  public java.lang.Object getCategory() {
    return category;
  }

  /**
   * Sets the value of the 'category' field.
   * @param value the value to set.
   */
  public void setCategory(java.lang.Object value) {
    this.category = value;
  }

  /**
   * Gets the value of the 'event' field.
   * @return The value of the 'event' field.
   */
  public java.lang.CharSequence getEvent() {
    return event;
  }

  /**
   * Sets the value of the 'event' field.
   * @param value the value to set.
   */
  public void setEvent(java.lang.CharSequence value) {
    this.event = value;
  }

  /**
   * Gets the value of the 'responseType' field.
   * @return The value of the 'responseType' field.
   */
  public java.lang.Object getResponseType() {
    return responseType;
  }

  /**
   * Sets the value of the 'responseType' field.
   * @param value the value to set.
   */
  public void setResponseType(java.lang.Object value) {
    this.responseType = value;
  }

  /**
   * Gets the value of the 'urgency' field.
   * @return The value of the 'urgency' field.
   */
  public eu.driver.model.cap.Urgency getUrgency() {
    return urgency;
  }

  /**
   * Sets the value of the 'urgency' field.
   * @param value the value to set.
   */
  public void setUrgency(eu.driver.model.cap.Urgency value) {
    this.urgency = value;
  }

  /**
   * Gets the value of the 'severity' field.
   * @return The value of the 'severity' field.
   */
  public eu.driver.model.cap.Severity getSeverity() {
    return severity;
  }

  /**
   * Sets the value of the 'severity' field.
   * @param value the value to set.
   */
  public void setSeverity(eu.driver.model.cap.Severity value) {
    this.severity = value;
  }

  /**
   * Gets the value of the 'certainty' field.
   * @return The value of the 'certainty' field.
   */
  public eu.driver.model.cap.Certainty getCertainty() {
    return certainty;
  }

  /**
   * Sets the value of the 'certainty' field.
   * @param value the value to set.
   */
  public void setCertainty(eu.driver.model.cap.Certainty value) {
    this.certainty = value;
  }

  /**
   * Gets the value of the 'audience' field.
   * @return The value of the 'audience' field.
   */
  public java.lang.CharSequence getAudience() {
    return audience;
  }

  /**
   * Sets the value of the 'audience' field.
   * @param value the value to set.
   */
  public void setAudience(java.lang.CharSequence value) {
    this.audience = value;
  }

  /**
   * Gets the value of the 'eventCode' field.
   * @return The value of the 'eventCode' field.
   */
  public java.lang.Object getEventCode() {
    return eventCode;
  }

  /**
   * Sets the value of the 'eventCode' field.
   * @param value the value to set.
   */
  public void setEventCode(java.lang.Object value) {
    this.eventCode = value;
  }

  /**
   * Gets the value of the 'effective' field.
   * @return TODO: datetime
   */
  public java.lang.CharSequence getEffective() {
    return effective;
  }

  /**
   * Sets the value of the 'effective' field.
   * TODO: datetime
   * @param value the value to set.
   */
  public void setEffective(java.lang.CharSequence value) {
    this.effective = value;
  }

  /**
   * Gets the value of the 'onset' field.
   * @return TODO: datetime
   */
  public java.lang.CharSequence getOnset() {
    return onset;
  }

  /**
   * Sets the value of the 'onset' field.
   * TODO: datetime
   * @param value the value to set.
   */
  public void setOnset(java.lang.CharSequence value) {
    this.onset = value;
  }

  /**
   * Gets the value of the 'expires' field.
   * @return TODO: datetime
   */
  public java.lang.CharSequence getExpires() {
    return expires;
  }

  /**
   * Sets the value of the 'expires' field.
   * TODO: datetime
   * @param value the value to set.
   */
  public void setExpires(java.lang.CharSequence value) {
    this.expires = value;
  }

  /**
   * Gets the value of the 'senderName' field.
   * @return The value of the 'senderName' field.
   */
  public java.lang.CharSequence getSenderName() {
    return senderName;
  }

  /**
   * Sets the value of the 'senderName' field.
   * @param value the value to set.
   */
  public void setSenderName(java.lang.CharSequence value) {
    this.senderName = value;
  }

  /**
   * Gets the value of the 'headline' field.
   * @return The value of the 'headline' field.
   */
  public java.lang.CharSequence getHeadline() {
    return headline;
  }

  /**
   * Sets the value of the 'headline' field.
   * @param value the value to set.
   */
  public void setHeadline(java.lang.CharSequence value) {
    this.headline = value;
  }

  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public java.lang.CharSequence getDescription() {
    return description;
  }

  /**
   * Sets the value of the 'description' field.
   * @param value the value to set.
   */
  public void setDescription(java.lang.CharSequence value) {
    this.description = value;
  }

  /**
   * Gets the value of the 'instruction' field.
   * @return The value of the 'instruction' field.
   */
  public java.lang.CharSequence getInstruction() {
    return instruction;
  }

  /**
   * Sets the value of the 'instruction' field.
   * @param value the value to set.
   */
  public void setInstruction(java.lang.CharSequence value) {
    this.instruction = value;
  }

  /**
   * Gets the value of the 'web' field.
   * @return TODO: anyURI
   */
  public java.lang.CharSequence getWeb() {
    return web;
  }

  /**
   * Sets the value of the 'web' field.
   * TODO: anyURI
   * @param value the value to set.
   */
  public void setWeb(java.lang.CharSequence value) {
    this.web = value;
  }

  /**
   * Gets the value of the 'contact' field.
   * @return The value of the 'contact' field.
   */
  public java.lang.CharSequence getContact() {
    return contact;
  }

  /**
   * Sets the value of the 'contact' field.
   * @param value the value to set.
   */
  public void setContact(java.lang.CharSequence value) {
    this.contact = value;
  }

  /**
   * Gets the value of the 'parameter' field.
   * @return The value of the 'parameter' field.
   */
  public java.lang.Object getParameter() {
    return parameter;
  }

  /**
   * Sets the value of the 'parameter' field.
   * @param value the value to set.
   */
  public void setParameter(java.lang.Object value) {
    this.parameter = value;
  }

  /**
   * Gets the value of the 'resource' field.
   * @return The value of the 'resource' field.
   */
  public java.lang.Object getResource() {
    return resource;
  }

  /**
   * Sets the value of the 'resource' field.
   * @param value the value to set.
   */
  public void setResource(java.lang.Object value) {
    this.resource = value;
  }

  /**
   * Gets the value of the 'area' field.
   * @return The value of the 'area' field.
   */
  public java.lang.Object getArea() {
    return area;
  }

  /**
   * Sets the value of the 'area' field.
   * @param value the value to set.
   */
  public void setArea(java.lang.Object value) {
    this.area = value;
  }

  /**
   * Creates a new Info RecordBuilder.
   * @return A new Info RecordBuilder
   */
  public static eu.driver.model.cap.Info.Builder newBuilder() {
    return new eu.driver.model.cap.Info.Builder();
  }

  /**
   * Creates a new Info RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Info RecordBuilder
   */
  public static eu.driver.model.cap.Info.Builder newBuilder(eu.driver.model.cap.Info.Builder other) {
    return new eu.driver.model.cap.Info.Builder(other);
  }

  /**
   * Creates a new Info RecordBuilder by copying an existing Info instance.
   * @param other The existing instance to copy.
   * @return A new Info RecordBuilder
   */
  public static eu.driver.model.cap.Info.Builder newBuilder(eu.driver.model.cap.Info other) {
    return new eu.driver.model.cap.Info.Builder(other);
  }

  /**
   * RecordBuilder for Info instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Info>
    implements org.apache.avro.data.RecordBuilder<Info> {

    private java.lang.CharSequence language;
    private java.lang.Object category;
    private java.lang.CharSequence event;
    private java.lang.Object responseType;
    private eu.driver.model.cap.Urgency urgency;
    private eu.driver.model.cap.Severity severity;
    private eu.driver.model.cap.Certainty certainty;
    private java.lang.CharSequence audience;
    private java.lang.Object eventCode;
    /** TODO: datetime */
    private java.lang.CharSequence effective;
    /** TODO: datetime */
    private java.lang.CharSequence onset;
    /** TODO: datetime */
    private java.lang.CharSequence expires;
    private java.lang.CharSequence senderName;
    private java.lang.CharSequence headline;
    private java.lang.CharSequence description;
    private java.lang.CharSequence instruction;
    /** TODO: anyURI */
    private java.lang.CharSequence web;
    private java.lang.CharSequence contact;
    private java.lang.Object parameter;
    private java.lang.Object resource;
    private java.lang.Object area;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(eu.driver.model.cap.Info.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.language)) {
        this.language = data().deepCopy(fields()[0].schema(), other.language);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.category)) {
        this.category = data().deepCopy(fields()[1].schema(), other.category);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.event)) {
        this.event = data().deepCopy(fields()[2].schema(), other.event);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.responseType)) {
        this.responseType = data().deepCopy(fields()[3].schema(), other.responseType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.urgency)) {
        this.urgency = data().deepCopy(fields()[4].schema(), other.urgency);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.severity)) {
        this.severity = data().deepCopy(fields()[5].schema(), other.severity);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.certainty)) {
        this.certainty = data().deepCopy(fields()[6].schema(), other.certainty);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.audience)) {
        this.audience = data().deepCopy(fields()[7].schema(), other.audience);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.eventCode)) {
        this.eventCode = data().deepCopy(fields()[8].schema(), other.eventCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.effective)) {
        this.effective = data().deepCopy(fields()[9].schema(), other.effective);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.onset)) {
        this.onset = data().deepCopy(fields()[10].schema(), other.onset);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.expires)) {
        this.expires = data().deepCopy(fields()[11].schema(), other.expires);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.senderName)) {
        this.senderName = data().deepCopy(fields()[12].schema(), other.senderName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.headline)) {
        this.headline = data().deepCopy(fields()[13].schema(), other.headline);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.description)) {
        this.description = data().deepCopy(fields()[14].schema(), other.description);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.instruction)) {
        this.instruction = data().deepCopy(fields()[15].schema(), other.instruction);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.web)) {
        this.web = data().deepCopy(fields()[16].schema(), other.web);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.contact)) {
        this.contact = data().deepCopy(fields()[17].schema(), other.contact);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.parameter)) {
        this.parameter = data().deepCopy(fields()[18].schema(), other.parameter);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.resource)) {
        this.resource = data().deepCopy(fields()[19].schema(), other.resource);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.area)) {
        this.area = data().deepCopy(fields()[20].schema(), other.area);
        fieldSetFlags()[20] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Info instance
     * @param other The existing instance to copy.
     */
    private Builder(eu.driver.model.cap.Info other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.language)) {
        this.language = data().deepCopy(fields()[0].schema(), other.language);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.category)) {
        this.category = data().deepCopy(fields()[1].schema(), other.category);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.event)) {
        this.event = data().deepCopy(fields()[2].schema(), other.event);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.responseType)) {
        this.responseType = data().deepCopy(fields()[3].schema(), other.responseType);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.urgency)) {
        this.urgency = data().deepCopy(fields()[4].schema(), other.urgency);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.severity)) {
        this.severity = data().deepCopy(fields()[5].schema(), other.severity);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.certainty)) {
        this.certainty = data().deepCopy(fields()[6].schema(), other.certainty);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.audience)) {
        this.audience = data().deepCopy(fields()[7].schema(), other.audience);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.eventCode)) {
        this.eventCode = data().deepCopy(fields()[8].schema(), other.eventCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.effective)) {
        this.effective = data().deepCopy(fields()[9].schema(), other.effective);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.onset)) {
        this.onset = data().deepCopy(fields()[10].schema(), other.onset);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.expires)) {
        this.expires = data().deepCopy(fields()[11].schema(), other.expires);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.senderName)) {
        this.senderName = data().deepCopy(fields()[12].schema(), other.senderName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.headline)) {
        this.headline = data().deepCopy(fields()[13].schema(), other.headline);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.description)) {
        this.description = data().deepCopy(fields()[14].schema(), other.description);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.instruction)) {
        this.instruction = data().deepCopy(fields()[15].schema(), other.instruction);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.web)) {
        this.web = data().deepCopy(fields()[16].schema(), other.web);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.contact)) {
        this.contact = data().deepCopy(fields()[17].schema(), other.contact);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.parameter)) {
        this.parameter = data().deepCopy(fields()[18].schema(), other.parameter);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.resource)) {
        this.resource = data().deepCopy(fields()[19].schema(), other.resource);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.area)) {
        this.area = data().deepCopy(fields()[20].schema(), other.area);
        fieldSetFlags()[20] = true;
      }
    }

    /**
      * Gets the value of the 'language' field.
      * @return The value.
      */
    public java.lang.CharSequence getLanguage() {
      return language;
    }

    /**
      * Sets the value of the 'language' field.
      * @param value The value of 'language'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setLanguage(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.language = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'language' field has been set.
      * @return True if the 'language' field has been set, false otherwise.
      */
    public boolean hasLanguage() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'language' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearLanguage() {
      language = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'category' field.
      * @return The value.
      */
    public java.lang.Object getCategory() {
      return category;
    }

    /**
      * Sets the value of the 'category' field.
      * @param value The value of 'category'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setCategory(java.lang.Object value) {
      validate(fields()[1], value);
      this.category = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'category' field has been set.
      * @return True if the 'category' field has been set, false otherwise.
      */
    public boolean hasCategory() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'category' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearCategory() {
      category = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'event' field.
      * @return The value.
      */
    public java.lang.CharSequence getEvent() {
      return event;
    }

    /**
      * Sets the value of the 'event' field.
      * @param value The value of 'event'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setEvent(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.event = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'event' field has been set.
      * @return True if the 'event' field has been set, false otherwise.
      */
    public boolean hasEvent() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'event' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearEvent() {
      event = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'responseType' field.
      * @return The value.
      */
    public java.lang.Object getResponseType() {
      return responseType;
    }

    /**
      * Sets the value of the 'responseType' field.
      * @param value The value of 'responseType'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setResponseType(java.lang.Object value) {
      validate(fields()[3], value);
      this.responseType = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'responseType' field has been set.
      * @return True if the 'responseType' field has been set, false otherwise.
      */
    public boolean hasResponseType() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'responseType' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearResponseType() {
      responseType = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'urgency' field.
      * @return The value.
      */
    public eu.driver.model.cap.Urgency getUrgency() {
      return urgency;
    }

    /**
      * Sets the value of the 'urgency' field.
      * @param value The value of 'urgency'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setUrgency(eu.driver.model.cap.Urgency value) {
      validate(fields()[4], value);
      this.urgency = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'urgency' field has been set.
      * @return True if the 'urgency' field has been set, false otherwise.
      */
    public boolean hasUrgency() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'urgency' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearUrgency() {
      urgency = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'severity' field.
      * @return The value.
      */
    public eu.driver.model.cap.Severity getSeverity() {
      return severity;
    }

    /**
      * Sets the value of the 'severity' field.
      * @param value The value of 'severity'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setSeverity(eu.driver.model.cap.Severity value) {
      validate(fields()[5], value);
      this.severity = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'severity' field has been set.
      * @return True if the 'severity' field has been set, false otherwise.
      */
    public boolean hasSeverity() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'severity' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearSeverity() {
      severity = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'certainty' field.
      * @return The value.
      */
    public eu.driver.model.cap.Certainty getCertainty() {
      return certainty;
    }

    /**
      * Sets the value of the 'certainty' field.
      * @param value The value of 'certainty'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setCertainty(eu.driver.model.cap.Certainty value) {
      validate(fields()[6], value);
      this.certainty = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'certainty' field has been set.
      * @return True if the 'certainty' field has been set, false otherwise.
      */
    public boolean hasCertainty() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'certainty' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearCertainty() {
      certainty = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'audience' field.
      * @return The value.
      */
    public java.lang.CharSequence getAudience() {
      return audience;
    }

    /**
      * Sets the value of the 'audience' field.
      * @param value The value of 'audience'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setAudience(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.audience = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'audience' field has been set.
      * @return True if the 'audience' field has been set, false otherwise.
      */
    public boolean hasAudience() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'audience' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearAudience() {
      audience = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventCode' field.
      * @return The value.
      */
    public java.lang.Object getEventCode() {
      return eventCode;
    }

    /**
      * Sets the value of the 'eventCode' field.
      * @param value The value of 'eventCode'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setEventCode(java.lang.Object value) {
      validate(fields()[8], value);
      this.eventCode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'eventCode' field has been set.
      * @return True if the 'eventCode' field has been set, false otherwise.
      */
    public boolean hasEventCode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'eventCode' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearEventCode() {
      eventCode = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'effective' field.
      * TODO: datetime
      * @return The value.
      */
    public java.lang.CharSequence getEffective() {
      return effective;
    }

    /**
      * Sets the value of the 'effective' field.
      * TODO: datetime
      * @param value The value of 'effective'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setEffective(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.effective = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'effective' field has been set.
      * TODO: datetime
      * @return True if the 'effective' field has been set, false otherwise.
      */
    public boolean hasEffective() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'effective' field.
      * TODO: datetime
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearEffective() {
      effective = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'onset' field.
      * TODO: datetime
      * @return The value.
      */
    public java.lang.CharSequence getOnset() {
      return onset;
    }

    /**
      * Sets the value of the 'onset' field.
      * TODO: datetime
      * @param value The value of 'onset'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setOnset(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.onset = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'onset' field has been set.
      * TODO: datetime
      * @return True if the 'onset' field has been set, false otherwise.
      */
    public boolean hasOnset() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'onset' field.
      * TODO: datetime
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearOnset() {
      onset = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'expires' field.
      * TODO: datetime
      * @return The value.
      */
    public java.lang.CharSequence getExpires() {
      return expires;
    }

    /**
      * Sets the value of the 'expires' field.
      * TODO: datetime
      * @param value The value of 'expires'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setExpires(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.expires = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'expires' field has been set.
      * TODO: datetime
      * @return True if the 'expires' field has been set, false otherwise.
      */
    public boolean hasExpires() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'expires' field.
      * TODO: datetime
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearExpires() {
      expires = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'senderName' field.
      * @return The value.
      */
    public java.lang.CharSequence getSenderName() {
      return senderName;
    }

    /**
      * Sets the value of the 'senderName' field.
      * @param value The value of 'senderName'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setSenderName(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.senderName = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'senderName' field has been set.
      * @return True if the 'senderName' field has been set, false otherwise.
      */
    public boolean hasSenderName() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'senderName' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearSenderName() {
      senderName = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'headline' field.
      * @return The value.
      */
    public java.lang.CharSequence getHeadline() {
      return headline;
    }

    /**
      * Sets the value of the 'headline' field.
      * @param value The value of 'headline'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setHeadline(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.headline = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'headline' field has been set.
      * @return True if the 'headline' field has been set, false otherwise.
      */
    public boolean hasHeadline() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'headline' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearHeadline() {
      headline = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public java.lang.CharSequence getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setDescription(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.description = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearDescription() {
      description = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'instruction' field.
      * @return The value.
      */
    public java.lang.CharSequence getInstruction() {
      return instruction;
    }

    /**
      * Sets the value of the 'instruction' field.
      * @param value The value of 'instruction'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setInstruction(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.instruction = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'instruction' field has been set.
      * @return True if the 'instruction' field has been set, false otherwise.
      */
    public boolean hasInstruction() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'instruction' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearInstruction() {
      instruction = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'web' field.
      * TODO: anyURI
      * @return The value.
      */
    public java.lang.CharSequence getWeb() {
      return web;
    }

    /**
      * Sets the value of the 'web' field.
      * TODO: anyURI
      * @param value The value of 'web'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setWeb(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.web = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'web' field has been set.
      * TODO: anyURI
      * @return True if the 'web' field has been set, false otherwise.
      */
    public boolean hasWeb() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'web' field.
      * TODO: anyURI
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearWeb() {
      web = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'contact' field.
      * @return The value.
      */
    public java.lang.CharSequence getContact() {
      return contact;
    }

    /**
      * Sets the value of the 'contact' field.
      * @param value The value of 'contact'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setContact(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.contact = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'contact' field has been set.
      * @return True if the 'contact' field has been set, false otherwise.
      */
    public boolean hasContact() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'contact' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearContact() {
      contact = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'parameter' field.
      * @return The value.
      */
    public java.lang.Object getParameter() {
      return parameter;
    }

    /**
      * Sets the value of the 'parameter' field.
      * @param value The value of 'parameter'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setParameter(java.lang.Object value) {
      validate(fields()[18], value);
      this.parameter = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'parameter' field has been set.
      * @return True if the 'parameter' field has been set, false otherwise.
      */
    public boolean hasParameter() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'parameter' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearParameter() {
      parameter = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'resource' field.
      * @return The value.
      */
    public java.lang.Object getResource() {
      return resource;
    }

    /**
      * Sets the value of the 'resource' field.
      * @param value The value of 'resource'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setResource(java.lang.Object value) {
      validate(fields()[19], value);
      this.resource = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'resource' field has been set.
      * @return True if the 'resource' field has been set, false otherwise.
      */
    public boolean hasResource() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'resource' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearResource() {
      resource = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'area' field.
      * @return The value.
      */
    public java.lang.Object getArea() {
      return area;
    }

    /**
      * Sets the value of the 'area' field.
      * @param value The value of 'area'.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder setArea(java.lang.Object value) {
      validate(fields()[20], value);
      this.area = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'area' field has been set.
      * @return True if the 'area' field has been set, false otherwise.
      */
    public boolean hasArea() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'area' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Info.Builder clearArea() {
      area = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Info build() {
      try {
        Info record = new Info();
        record.language = fieldSetFlags()[0] ? this.language : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.category = fieldSetFlags()[1] ? this.category : (java.lang.Object) defaultValue(fields()[1]);
        record.event = fieldSetFlags()[2] ? this.event : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.responseType = fieldSetFlags()[3] ? this.responseType : (java.lang.Object) defaultValue(fields()[3]);
        record.urgency = fieldSetFlags()[4] ? this.urgency : (eu.driver.model.cap.Urgency) defaultValue(fields()[4]);
        record.severity = fieldSetFlags()[5] ? this.severity : (eu.driver.model.cap.Severity) defaultValue(fields()[5]);
        record.certainty = fieldSetFlags()[6] ? this.certainty : (eu.driver.model.cap.Certainty) defaultValue(fields()[6]);
        record.audience = fieldSetFlags()[7] ? this.audience : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.eventCode = fieldSetFlags()[8] ? this.eventCode : (java.lang.Object) defaultValue(fields()[8]);
        record.effective = fieldSetFlags()[9] ? this.effective : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.onset = fieldSetFlags()[10] ? this.onset : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.expires = fieldSetFlags()[11] ? this.expires : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.senderName = fieldSetFlags()[12] ? this.senderName : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.headline = fieldSetFlags()[13] ? this.headline : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.description = fieldSetFlags()[14] ? this.description : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.instruction = fieldSetFlags()[15] ? this.instruction : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.web = fieldSetFlags()[16] ? this.web : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.contact = fieldSetFlags()[17] ? this.contact : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.parameter = fieldSetFlags()[18] ? this.parameter : (java.lang.Object) defaultValue(fields()[18]);
        record.resource = fieldSetFlags()[19] ? this.resource : (java.lang.Object) defaultValue(fields()[19]);
        record.area = fieldSetFlags()[20] ? this.area : (java.lang.Object) defaultValue(fields()[20]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Info>
    WRITER$ = (org.apache.avro.io.DatumWriter<Info>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Info>
    READER$ = (org.apache.avro.io.DatumReader<Info>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
