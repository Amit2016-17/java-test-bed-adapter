/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package eu.driver.model.mlp;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Result extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1814711336283891835L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Result\",\"namespace\":\"eu.driver.model.mlp\",\"fields\":[{\"name\":\"result\",\"type\":{\"type\":\"enum\",\"name\":\"ResultEnum\",\"symbols\":[\"OK\",\"SYSTEM_FAILURE\",\"UNSPECIFIED_ERROR\",\"UNAUTHORIZED_APPLICATION\",\"UNKNOWN_SUBSCRIBER\",\"ABSENT_SUBSCRIBER\",\"POSITION_METHOD_FAILURE\",\"CONGESTION_IN_LOCATION_SERVER\",\"CONGESTION_IN_MOBILE_NETWORK\",\"UNSUPPORTED_VERSION\",\"TOO_MANY_POSITION_ITEMS\",\"FORMAT_ERROR\",\"SYNTAX_ERROR\",\"PROTOCOL_ELEMENT_NOT_SUPPORTED\",\"SERVICE_NOT_SUPPORTED\",\"PROTOCOL_ELEMENT_ATTRIBUTE_NOT_SUPPORTED\",\"INVALID_PROTOCOL_ELEMENT_VALUE\",\"INVALID_PROTOCOL_ELEMENT_ATTRIBUTE_VALUE\",\"PROTOCOL_ELEMENT_VALUE_NOT_SUPPORTED\",\"PROTOCOL_ELEMENT_ATTRIBUTE_VALUE_NOT_SUPPORTED\",\"QOP_NOT_ATTAINABLE\",\"POSITIONING_NOT_ALLOWED\",\"DISALLOWED_BY_LOCAL_REGULATIONS\",\"MISCONFIGURATION_OF_LOCATION_SERVER\"]},\"doc\":\"See MLP 3.1 specifications chapter 5.4 on Result Codes\"},{\"name\":\"attr_resid\",\"type\":\"string\",\"doc\":\"See MLP 3.1 specifications chapter 5.4 on Result Codes\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Result> ENCODER =
      new BinaryMessageEncoder<Result>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Result> DECODER =
      new BinaryMessageDecoder<Result>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Result> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Result> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Result>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Result to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Result from a ByteBuffer. */
  public static Result fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** See MLP 3.1 specifications chapter 5.4 on Result Codes */
  @Deprecated public eu.driver.model.mlp.ResultEnum result;
  /** See MLP 3.1 specifications chapter 5.4 on Result Codes */
  @Deprecated public java.lang.CharSequence attr_resid;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Result() {}

  /**
   * All-args constructor.
   * @param result See MLP 3.1 specifications chapter 5.4 on Result Codes
   * @param attr_resid See MLP 3.1 specifications chapter 5.4 on Result Codes
   */
  public Result(eu.driver.model.mlp.ResultEnum result, java.lang.CharSequence attr_resid) {
    this.result = result;
    this.attr_resid = attr_resid;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return result;
    case 1: return attr_resid;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: result = (eu.driver.model.mlp.ResultEnum)value$; break;
    case 1: attr_resid = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'result' field.
   * @return See MLP 3.1 specifications chapter 5.4 on Result Codes
   */
  public eu.driver.model.mlp.ResultEnum getResult() {
    return result;
  }

  /**
   * Sets the value of the 'result' field.
   * See MLP 3.1 specifications chapter 5.4 on Result Codes
   * @param value the value to set.
   */
  public void setResult(eu.driver.model.mlp.ResultEnum value) {
    this.result = value;
  }

  /**
   * Gets the value of the 'attr_resid' field.
   * @return See MLP 3.1 specifications chapter 5.4 on Result Codes
   */
  public java.lang.CharSequence getAttrResid() {
    return attr_resid;
  }

  /**
   * Sets the value of the 'attr_resid' field.
   * See MLP 3.1 specifications chapter 5.4 on Result Codes
   * @param value the value to set.
   */
  public void setAttrResid(java.lang.CharSequence value) {
    this.attr_resid = value;
  }

  /**
   * Creates a new Result RecordBuilder.
   * @return A new Result RecordBuilder
   */
  public static eu.driver.model.mlp.Result.Builder newBuilder() {
    return new eu.driver.model.mlp.Result.Builder();
  }

  /**
   * Creates a new Result RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Result RecordBuilder
   */
  public static eu.driver.model.mlp.Result.Builder newBuilder(eu.driver.model.mlp.Result.Builder other) {
    return new eu.driver.model.mlp.Result.Builder(other);
  }

  /**
   * Creates a new Result RecordBuilder by copying an existing Result instance.
   * @param other The existing instance to copy.
   * @return A new Result RecordBuilder
   */
  public static eu.driver.model.mlp.Result.Builder newBuilder(eu.driver.model.mlp.Result other) {
    return new eu.driver.model.mlp.Result.Builder(other);
  }

  /**
   * RecordBuilder for Result instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Result>
    implements org.apache.avro.data.RecordBuilder<Result> {

    /** See MLP 3.1 specifications chapter 5.4 on Result Codes */
    private eu.driver.model.mlp.ResultEnum result;
    /** See MLP 3.1 specifications chapter 5.4 on Result Codes */
    private java.lang.CharSequence attr_resid;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(eu.driver.model.mlp.Result.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.result)) {
        this.result = data().deepCopy(fields()[0].schema(), other.result);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attr_resid)) {
        this.attr_resid = data().deepCopy(fields()[1].schema(), other.attr_resid);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Result instance
     * @param other The existing instance to copy.
     */
    private Builder(eu.driver.model.mlp.Result other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.result)) {
        this.result = data().deepCopy(fields()[0].schema(), other.result);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.attr_resid)) {
        this.attr_resid = data().deepCopy(fields()[1].schema(), other.attr_resid);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'result' field.
      * See MLP 3.1 specifications chapter 5.4 on Result Codes
      * @return The value.
      */
    public eu.driver.model.mlp.ResultEnum getResult() {
      return result;
    }

    /**
      * Sets the value of the 'result' field.
      * See MLP 3.1 specifications chapter 5.4 on Result Codes
      * @param value The value of 'result'.
      * @return This builder.
      */
    public eu.driver.model.mlp.Result.Builder setResult(eu.driver.model.mlp.ResultEnum value) {
      validate(fields()[0], value);
      this.result = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'result' field has been set.
      * See MLP 3.1 specifications chapter 5.4 on Result Codes
      * @return True if the 'result' field has been set, false otherwise.
      */
    public boolean hasResult() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'result' field.
      * See MLP 3.1 specifications chapter 5.4 on Result Codes
      * @return This builder.
      */
    public eu.driver.model.mlp.Result.Builder clearResult() {
      result = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'attr_resid' field.
      * See MLP 3.1 specifications chapter 5.4 on Result Codes
      * @return The value.
      */
    public java.lang.CharSequence getAttrResid() {
      return attr_resid;
    }

    /**
      * Sets the value of the 'attr_resid' field.
      * See MLP 3.1 specifications chapter 5.4 on Result Codes
      * @param value The value of 'attr_resid'.
      * @return This builder.
      */
    public eu.driver.model.mlp.Result.Builder setAttrResid(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.attr_resid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'attr_resid' field has been set.
      * See MLP 3.1 specifications chapter 5.4 on Result Codes
      * @return True if the 'attr_resid' field has been set, false otherwise.
      */
    public boolean hasAttrResid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'attr_resid' field.
      * See MLP 3.1 specifications chapter 5.4 on Result Codes
      * @return This builder.
      */
    public eu.driver.model.mlp.Result.Builder clearAttrResid() {
      attr_resid = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Result build() {
      try {
        Result record = new Result();
        record.result = fieldSetFlags()[0] ? this.result : (eu.driver.model.mlp.ResultEnum) defaultValue(fields()[0]);
        record.attr_resid = fieldSetFlags()[1] ? this.attr_resid : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Result>
    WRITER$ = (org.apache.avro.io.DatumWriter<Result>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Result>
    READER$ = (org.apache.avro.io.DatumReader<Result>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
