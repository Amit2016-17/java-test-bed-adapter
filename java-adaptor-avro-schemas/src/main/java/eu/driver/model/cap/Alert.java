/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package eu.driver.model.cap;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** CAP Alert Message (version 1.2) */
@org.apache.avro.specific.AvroGenerated
public class Alert extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2345078378001083727L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Alert\",\"namespace\":\"eu.driver.model.cap\",\"doc\":\"CAP Alert Message (version 1.2)\",\"fields\":[{\"name\":\"identifier\",\"type\":\"string\"},{\"name\":\"sender\",\"type\":\"string\"},{\"name\":\"sent\",\"type\":\"string\",\"doc\":\"TODO xs:dateTime Used pattern\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"Status\",\"symbols\":[\"Actual\",\"Exercise\",\"System\",\"Test\",\"Draft\"]}},{\"name\":\"msgType\",\"type\":{\"type\":\"enum\",\"name\":\"MsgType\",\"symbols\":[\"Alert\",\"Update\",\"Cancel\",\"Ack\",\"Error\"]}},{\"name\":\"source\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"scope\",\"type\":{\"type\":\"enum\",\"name\":\"Scope\",\"symbols\":[\"Public\",\"Restricted\",\"Private\"]}},{\"name\":\"restriction\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"addresses\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"code\",\"type\":[\"null\",\"string\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"note\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"references\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"incidents\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"info\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Info\",\"fields\":[{\"name\":\"language\",\"type\":[\"string\",\"null\"],\"default\":\"en-US\"},{\"name\":\"category\",\"type\":[{\"type\":\"enum\",\"name\":\"Category\",\"symbols\":[\"Geo\",\"Met\",\"Safety\",\"Security\",\"Rescue\",\"Fire\",\"Health\",\"Env\",\"Transport\",\"Infra\",\"CBRNE\",\"Other\"]},{\"type\":\"array\",\"items\":\"Category\"}]},{\"name\":\"event\",\"type\":\"string\"},{\"name\":\"responseType\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"ResponseType\",\"symbols\":[\"Shelter\",\"Evacuate\",\"Prepare\",\"Execute\",\"Avoid\",\"Monitor\",\"Assess\",\"AllClear\",\"None\"]},{\"type\":\"array\",\"items\":\"ResponseType\"}],\"default\":null},{\"name\":\"urgency\",\"type\":{\"type\":\"enum\",\"name\":\"Urgency\",\"symbols\":[\"Immediate\",\"Expected\",\"Future\",\"Past\",\"Unknown\"]}},{\"name\":\"severity\",\"type\":{\"type\":\"enum\",\"name\":\"Severity\",\"symbols\":[\"Extreme\",\"Severe\",\"Moderate\",\"Minor\",\"Unknown\"]}},{\"name\":\"certainty\",\"type\":{\"type\":\"enum\",\"name\":\"Certainty\",\"symbols\":[\"Observed\",\"Likely\",\"Possible\",\"Unlikely\",\"Unknown\"]}},{\"name\":\"audience\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"eventCode\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"ValueNamePair\",\"fields\":[{\"name\":\"valueName\",\"type\":\"string\"},{\"name\":\"value\",\"type\":\"string\"}]},{\"type\":\"array\",\"items\":\"ValueNamePair\"}],\"default\":null},{\"name\":\"effective\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO: datetime\",\"default\":null},{\"name\":\"onset\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO: datetime\",\"default\":null},{\"name\":\"expires\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO: datetime\",\"default\":null},{\"name\":\"senderName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"headline\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"instruction\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"web\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO: anyURI\",\"default\":null},{\"name\":\"contact\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"parameter\",\"type\":[\"null\",\"ValueNamePair\",{\"type\":\"array\",\"items\":\"ValueNamePair\"}],\"default\":null},{\"name\":\"resource\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Resource\",\"fields\":[{\"name\":\"resourceDesc\",\"type\":\"string\"},{\"name\":\"size\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"uri\",\"type\":[\"null\",\"string\"],\"doc\":\"TODO, anyURI\",\"default\":null},{\"name\":\"deferUri\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"digest\",\"type\":[\"null\",\"string\"],\"default\":null}]},{\"type\":\"array\",\"items\":\"Resource\"}],\"default\":null},{\"name\":\"area\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Area\",\"fields\":[{\"name\":\"areaDesc\",\"type\":\"string\"},{\"name\":\"polygon\",\"type\":[\"null\",\"string\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"circle\",\"type\":[\"null\",\"string\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"geocode\",\"type\":[\"null\",\"ValueNamePair\",{\"type\":\"array\",\"items\":\"ValueNamePair\"}],\"default\":null},{\"name\":\"altitude\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"ceiling\",\"type\":[\"null\",\"double\"],\"default\":null}]},{\"type\":\"array\",\"items\":\"Area\"}],\"default\":null}]},{\"type\":\"array\",\"items\":\"Info\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Alert> ENCODER =
      new BinaryMessageEncoder<Alert>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Alert> DECODER =
      new BinaryMessageDecoder<Alert>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Alert> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Alert> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Alert>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Alert to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Alert from a ByteBuffer. */
  public static Alert fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence identifier;
  @Deprecated public java.lang.CharSequence sender;
  /** TODO xs:dateTime Used pattern */
  @Deprecated public java.lang.CharSequence sent;
  @Deprecated public eu.driver.model.cap.Status status;
  @Deprecated public eu.driver.model.cap.MsgType msgType;
  @Deprecated public java.lang.CharSequence source;
  @Deprecated public eu.driver.model.cap.Scope scope;
  @Deprecated public java.lang.CharSequence restriction;
  @Deprecated public java.lang.CharSequence addresses;
  @Deprecated public java.lang.Object code;
  @Deprecated public java.lang.CharSequence note;
  @Deprecated public java.lang.CharSequence references;
  @Deprecated public java.lang.CharSequence incidents;
  @Deprecated public java.lang.Object info;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Alert() {}

  /**
   * All-args constructor.
   * @param identifier The new value for identifier
   * @param sender The new value for sender
   * @param sent TODO xs:dateTime Used pattern
   * @param status The new value for status
   * @param msgType The new value for msgType
   * @param source The new value for source
   * @param scope The new value for scope
   * @param restriction The new value for restriction
   * @param addresses The new value for addresses
   * @param code The new value for code
   * @param note The new value for note
   * @param references The new value for references
   * @param incidents The new value for incidents
   * @param info The new value for info
   */
  public Alert(java.lang.CharSequence identifier, java.lang.CharSequence sender, java.lang.CharSequence sent, eu.driver.model.cap.Status status, eu.driver.model.cap.MsgType msgType, java.lang.CharSequence source, eu.driver.model.cap.Scope scope, java.lang.CharSequence restriction, java.lang.CharSequence addresses, java.lang.Object code, java.lang.CharSequence note, java.lang.CharSequence references, java.lang.CharSequence incidents, java.lang.Object info) {
    this.identifier = identifier;
    this.sender = sender;
    this.sent = sent;
    this.status = status;
    this.msgType = msgType;
    this.source = source;
    this.scope = scope;
    this.restriction = restriction;
    this.addresses = addresses;
    this.code = code;
    this.note = note;
    this.references = references;
    this.incidents = incidents;
    this.info = info;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return identifier;
    case 1: return sender;
    case 2: return sent;
    case 3: return status;
    case 4: return msgType;
    case 5: return source;
    case 6: return scope;
    case 7: return restriction;
    case 8: return addresses;
    case 9: return code;
    case 10: return note;
    case 11: return references;
    case 12: return incidents;
    case 13: return info;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: identifier = (java.lang.CharSequence)value$; break;
    case 1: sender = (java.lang.CharSequence)value$; break;
    case 2: sent = (java.lang.CharSequence)value$; break;
    case 3: status = (eu.driver.model.cap.Status)value$; break;
    case 4: msgType = (eu.driver.model.cap.MsgType)value$; break;
    case 5: source = (java.lang.CharSequence)value$; break;
    case 6: scope = (eu.driver.model.cap.Scope)value$; break;
    case 7: restriction = (java.lang.CharSequence)value$; break;
    case 8: addresses = (java.lang.CharSequence)value$; break;
    case 9: code = (java.lang.Object)value$; break;
    case 10: note = (java.lang.CharSequence)value$; break;
    case 11: references = (java.lang.CharSequence)value$; break;
    case 12: incidents = (java.lang.CharSequence)value$; break;
    case 13: info = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'identifier' field.
   * @return The value of the 'identifier' field.
   */
  public java.lang.CharSequence getIdentifier() {
    return identifier;
  }

  /**
   * Sets the value of the 'identifier' field.
   * @param value the value to set.
   */
  public void setIdentifier(java.lang.CharSequence value) {
    this.identifier = value;
  }

  /**
   * Gets the value of the 'sender' field.
   * @return The value of the 'sender' field.
   */
  public java.lang.CharSequence getSender() {
    return sender;
  }

  /**
   * Sets the value of the 'sender' field.
   * @param value the value to set.
   */
  public void setSender(java.lang.CharSequence value) {
    this.sender = value;
  }

  /**
   * Gets the value of the 'sent' field.
   * @return TODO xs:dateTime Used pattern
   */
  public java.lang.CharSequence getSent() {
    return sent;
  }

  /**
   * Sets the value of the 'sent' field.
   * TODO xs:dateTime Used pattern
   * @param value the value to set.
   */
  public void setSent(java.lang.CharSequence value) {
    this.sent = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public eu.driver.model.cap.Status getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(eu.driver.model.cap.Status value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'msgType' field.
   * @return The value of the 'msgType' field.
   */
  public eu.driver.model.cap.MsgType getMsgType() {
    return msgType;
  }

  /**
   * Sets the value of the 'msgType' field.
   * @param value the value to set.
   */
  public void setMsgType(eu.driver.model.cap.MsgType value) {
    this.msgType = value;
  }

  /**
   * Gets the value of the 'source' field.
   * @return The value of the 'source' field.
   */
  public java.lang.CharSequence getSource() {
    return source;
  }

  /**
   * Sets the value of the 'source' field.
   * @param value the value to set.
   */
  public void setSource(java.lang.CharSequence value) {
    this.source = value;
  }

  /**
   * Gets the value of the 'scope' field.
   * @return The value of the 'scope' field.
   */
  public eu.driver.model.cap.Scope getScope() {
    return scope;
  }

  /**
   * Sets the value of the 'scope' field.
   * @param value the value to set.
   */
  public void setScope(eu.driver.model.cap.Scope value) {
    this.scope = value;
  }

  /**
   * Gets the value of the 'restriction' field.
   * @return The value of the 'restriction' field.
   */
  public java.lang.CharSequence getRestriction() {
    return restriction;
  }

  /**
   * Sets the value of the 'restriction' field.
   * @param value the value to set.
   */
  public void setRestriction(java.lang.CharSequence value) {
    this.restriction = value;
  }

  /**
   * Gets the value of the 'addresses' field.
   * @return The value of the 'addresses' field.
   */
  public java.lang.CharSequence getAddresses() {
    return addresses;
  }

  /**
   * Sets the value of the 'addresses' field.
   * @param value the value to set.
   */
  public void setAddresses(java.lang.CharSequence value) {
    this.addresses = value;
  }

  /**
   * Gets the value of the 'code' field.
   * @return The value of the 'code' field.
   */
  public java.lang.Object getCode() {
    return code;
  }

  /**
   * Sets the value of the 'code' field.
   * @param value the value to set.
   */
  public void setCode(java.lang.Object value) {
    this.code = value;
  }

  /**
   * Gets the value of the 'note' field.
   * @return The value of the 'note' field.
   */
  public java.lang.CharSequence getNote() {
    return note;
  }

  /**
   * Sets the value of the 'note' field.
   * @param value the value to set.
   */
  public void setNote(java.lang.CharSequence value) {
    this.note = value;
  }

  /**
   * Gets the value of the 'references' field.
   * @return The value of the 'references' field.
   */
  public java.lang.CharSequence getReferences() {
    return references;
  }

  /**
   * Sets the value of the 'references' field.
   * @param value the value to set.
   */
  public void setReferences(java.lang.CharSequence value) {
    this.references = value;
  }

  /**
   * Gets the value of the 'incidents' field.
   * @return The value of the 'incidents' field.
   */
  public java.lang.CharSequence getIncidents() {
    return incidents;
  }

  /**
   * Sets the value of the 'incidents' field.
   * @param value the value to set.
   */
  public void setIncidents(java.lang.CharSequence value) {
    this.incidents = value;
  }

  /**
   * Gets the value of the 'info' field.
   * @return The value of the 'info' field.
   */
  public java.lang.Object getInfo() {
    return info;
  }

  /**
   * Sets the value of the 'info' field.
   * @param value the value to set.
   */
  public void setInfo(java.lang.Object value) {
    this.info = value;
  }

  /**
   * Creates a new Alert RecordBuilder.
   * @return A new Alert RecordBuilder
   */
  public static eu.driver.model.cap.Alert.Builder newBuilder() {
    return new eu.driver.model.cap.Alert.Builder();
  }

  /**
   * Creates a new Alert RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Alert RecordBuilder
   */
  public static eu.driver.model.cap.Alert.Builder newBuilder(eu.driver.model.cap.Alert.Builder other) {
    return new eu.driver.model.cap.Alert.Builder(other);
  }

  /**
   * Creates a new Alert RecordBuilder by copying an existing Alert instance.
   * @param other The existing instance to copy.
   * @return A new Alert RecordBuilder
   */
  public static eu.driver.model.cap.Alert.Builder newBuilder(eu.driver.model.cap.Alert other) {
    return new eu.driver.model.cap.Alert.Builder(other);
  }

  /**
   * RecordBuilder for Alert instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Alert>
    implements org.apache.avro.data.RecordBuilder<Alert> {

    private java.lang.CharSequence identifier;
    private java.lang.CharSequence sender;
    /** TODO xs:dateTime Used pattern */
    private java.lang.CharSequence sent;
    private eu.driver.model.cap.Status status;
    private eu.driver.model.cap.MsgType msgType;
    private java.lang.CharSequence source;
    private eu.driver.model.cap.Scope scope;
    private java.lang.CharSequence restriction;
    private java.lang.CharSequence addresses;
    private java.lang.Object code;
    private java.lang.CharSequence note;
    private java.lang.CharSequence references;
    private java.lang.CharSequence incidents;
    private java.lang.Object info;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(eu.driver.model.cap.Alert.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.identifier)) {
        this.identifier = data().deepCopy(fields()[0].schema(), other.identifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sender)) {
        this.sender = data().deepCopy(fields()[1].schema(), other.sender);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sent)) {
        this.sent = data().deepCopy(fields()[2].schema(), other.sent);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.msgType)) {
        this.msgType = data().deepCopy(fields()[4].schema(), other.msgType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.source)) {
        this.source = data().deepCopy(fields()[5].schema(), other.source);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.scope)) {
        this.scope = data().deepCopy(fields()[6].schema(), other.scope);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.restriction)) {
        this.restriction = data().deepCopy(fields()[7].schema(), other.restriction);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.addresses)) {
        this.addresses = data().deepCopy(fields()[8].schema(), other.addresses);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.code)) {
        this.code = data().deepCopy(fields()[9].schema(), other.code);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.note)) {
        this.note = data().deepCopy(fields()[10].schema(), other.note);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.references)) {
        this.references = data().deepCopy(fields()[11].schema(), other.references);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.incidents)) {
        this.incidents = data().deepCopy(fields()[12].schema(), other.incidents);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.info)) {
        this.info = data().deepCopy(fields()[13].schema(), other.info);
        fieldSetFlags()[13] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Alert instance
     * @param other The existing instance to copy.
     */
    private Builder(eu.driver.model.cap.Alert other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.identifier)) {
        this.identifier = data().deepCopy(fields()[0].schema(), other.identifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sender)) {
        this.sender = data().deepCopy(fields()[1].schema(), other.sender);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sent)) {
        this.sent = data().deepCopy(fields()[2].schema(), other.sent);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.status)) {
        this.status = data().deepCopy(fields()[3].schema(), other.status);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.msgType)) {
        this.msgType = data().deepCopy(fields()[4].schema(), other.msgType);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.source)) {
        this.source = data().deepCopy(fields()[5].schema(), other.source);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.scope)) {
        this.scope = data().deepCopy(fields()[6].schema(), other.scope);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.restriction)) {
        this.restriction = data().deepCopy(fields()[7].schema(), other.restriction);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.addresses)) {
        this.addresses = data().deepCopy(fields()[8].schema(), other.addresses);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.code)) {
        this.code = data().deepCopy(fields()[9].schema(), other.code);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.note)) {
        this.note = data().deepCopy(fields()[10].schema(), other.note);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.references)) {
        this.references = data().deepCopy(fields()[11].schema(), other.references);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.incidents)) {
        this.incidents = data().deepCopy(fields()[12].schema(), other.incidents);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.info)) {
        this.info = data().deepCopy(fields()[13].schema(), other.info);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'identifier' field.
      * @return The value.
      */
    public java.lang.CharSequence getIdentifier() {
      return identifier;
    }

    /**
      * Sets the value of the 'identifier' field.
      * @param value The value of 'identifier'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setIdentifier(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.identifier = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'identifier' field has been set.
      * @return True if the 'identifier' field has been set, false otherwise.
      */
    public boolean hasIdentifier() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'identifier' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearIdentifier() {
      identifier = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sender' field.
      * @return The value.
      */
    public java.lang.CharSequence getSender() {
      return sender;
    }

    /**
      * Sets the value of the 'sender' field.
      * @param value The value of 'sender'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setSender(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.sender = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sender' field has been set.
      * @return True if the 'sender' field has been set, false otherwise.
      */
    public boolean hasSender() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sender' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearSender() {
      sender = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'sent' field.
      * TODO xs:dateTime Used pattern
      * @return The value.
      */
    public java.lang.CharSequence getSent() {
      return sent;
    }

    /**
      * Sets the value of the 'sent' field.
      * TODO xs:dateTime Used pattern
      * @param value The value of 'sent'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setSent(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.sent = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'sent' field has been set.
      * TODO xs:dateTime Used pattern
      * @return True if the 'sent' field has been set, false otherwise.
      */
    public boolean hasSent() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'sent' field.
      * TODO xs:dateTime Used pattern
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearSent() {
      sent = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public eu.driver.model.cap.Status getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setStatus(eu.driver.model.cap.Status value) {
      validate(fields()[3], value);
      this.status = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearStatus() {
      status = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'msgType' field.
      * @return The value.
      */
    public eu.driver.model.cap.MsgType getMsgType() {
      return msgType;
    }

    /**
      * Sets the value of the 'msgType' field.
      * @param value The value of 'msgType'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setMsgType(eu.driver.model.cap.MsgType value) {
      validate(fields()[4], value);
      this.msgType = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'msgType' field has been set.
      * @return True if the 'msgType' field has been set, false otherwise.
      */
    public boolean hasMsgType() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'msgType' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearMsgType() {
      msgType = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * @return The value.
      */
    public java.lang.CharSequence getSource() {
      return source;
    }

    /**
      * Sets the value of the 'source' field.
      * @param value The value of 'source'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setSource(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.source = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'source' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearSource() {
      source = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'scope' field.
      * @return The value.
      */
    public eu.driver.model.cap.Scope getScope() {
      return scope;
    }

    /**
      * Sets the value of the 'scope' field.
      * @param value The value of 'scope'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setScope(eu.driver.model.cap.Scope value) {
      validate(fields()[6], value);
      this.scope = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'scope' field has been set.
      * @return True if the 'scope' field has been set, false otherwise.
      */
    public boolean hasScope() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'scope' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearScope() {
      scope = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'restriction' field.
      * @return The value.
      */
    public java.lang.CharSequence getRestriction() {
      return restriction;
    }

    /**
      * Sets the value of the 'restriction' field.
      * @param value The value of 'restriction'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setRestriction(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.restriction = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'restriction' field has been set.
      * @return True if the 'restriction' field has been set, false otherwise.
      */
    public boolean hasRestriction() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'restriction' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearRestriction() {
      restriction = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'addresses' field.
      * @return The value.
      */
    public java.lang.CharSequence getAddresses() {
      return addresses;
    }

    /**
      * Sets the value of the 'addresses' field.
      * @param value The value of 'addresses'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setAddresses(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.addresses = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'addresses' field has been set.
      * @return True if the 'addresses' field has been set, false otherwise.
      */
    public boolean hasAddresses() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'addresses' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearAddresses() {
      addresses = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'code' field.
      * @return The value.
      */
    public java.lang.Object getCode() {
      return code;
    }

    /**
      * Sets the value of the 'code' field.
      * @param value The value of 'code'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setCode(java.lang.Object value) {
      validate(fields()[9], value);
      this.code = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'code' field has been set.
      * @return True if the 'code' field has been set, false otherwise.
      */
    public boolean hasCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'code' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearCode() {
      code = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'note' field.
      * @return The value.
      */
    public java.lang.CharSequence getNote() {
      return note;
    }

    /**
      * Sets the value of the 'note' field.
      * @param value The value of 'note'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setNote(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.note = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'note' field has been set.
      * @return True if the 'note' field has been set, false otherwise.
      */
    public boolean hasNote() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'note' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearNote() {
      note = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'references' field.
      * @return The value.
      */
    public java.lang.CharSequence getReferences() {
      return references;
    }

    /**
      * Sets the value of the 'references' field.
      * @param value The value of 'references'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setReferences(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.references = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'references' field has been set.
      * @return True if the 'references' field has been set, false otherwise.
      */
    public boolean hasReferences() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'references' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearReferences() {
      references = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'incidents' field.
      * @return The value.
      */
    public java.lang.CharSequence getIncidents() {
      return incidents;
    }

    /**
      * Sets the value of the 'incidents' field.
      * @param value The value of 'incidents'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setIncidents(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.incidents = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'incidents' field has been set.
      * @return True if the 'incidents' field has been set, false otherwise.
      */
    public boolean hasIncidents() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'incidents' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearIncidents() {
      incidents = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'info' field.
      * @return The value.
      */
    public java.lang.Object getInfo() {
      return info;
    }

    /**
      * Sets the value of the 'info' field.
      * @param value The value of 'info'.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder setInfo(java.lang.Object value) {
      validate(fields()[13], value);
      this.info = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'info' field has been set.
      * @return True if the 'info' field has been set, false otherwise.
      */
    public boolean hasInfo() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'info' field.
      * @return This builder.
      */
    public eu.driver.model.cap.Alert.Builder clearInfo() {
      info = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Alert build() {
      try {
        Alert record = new Alert();
        record.identifier = fieldSetFlags()[0] ? this.identifier : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.sender = fieldSetFlags()[1] ? this.sender : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.sent = fieldSetFlags()[2] ? this.sent : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.status = fieldSetFlags()[3] ? this.status : (eu.driver.model.cap.Status) defaultValue(fields()[3]);
        record.msgType = fieldSetFlags()[4] ? this.msgType : (eu.driver.model.cap.MsgType) defaultValue(fields()[4]);
        record.source = fieldSetFlags()[5] ? this.source : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.scope = fieldSetFlags()[6] ? this.scope : (eu.driver.model.cap.Scope) defaultValue(fields()[6]);
        record.restriction = fieldSetFlags()[7] ? this.restriction : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.addresses = fieldSetFlags()[8] ? this.addresses : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.code = fieldSetFlags()[9] ? this.code : (java.lang.Object) defaultValue(fields()[9]);
        record.note = fieldSetFlags()[10] ? this.note : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.references = fieldSetFlags()[11] ? this.references : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.incidents = fieldSetFlags()[12] ? this.incidents : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.info = fieldSetFlags()[13] ? this.info : (java.lang.Object) defaultValue(fields()[13]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Alert>
    WRITER$ = (org.apache.avro.io.DatumWriter<Alert>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Alert>
    READER$ = (org.apache.avro.io.DatumReader<Alert>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
