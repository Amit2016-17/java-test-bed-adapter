/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package eu.driver.model.emsi;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MISSION extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6465269421680474384L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MISSION\",\"namespace\":\"eu.driver.model.emsi\",\"fields\":[{\"name\":\"TYPE\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"source\":\"element TYPE\"},{\"name\":\"FREETEXT\",\"type\":[\"null\",\"string\"],\"source\":\"element FREETEXT\"},{\"name\":\"ID\",\"type\":[\"null\",\"string\"],\"source\":\"element ID\"},{\"name\":\"MAIN_MISSION_ID\",\"type\":[\"null\",\"string\"],\"source\":\"element MAIN_MISSION_ID\"},{\"name\":\"ORG_ID\",\"type\":[\"null\",\"string\"],\"source\":\"element ORG_ID\"},{\"name\":\"NAME\",\"type\":[\"null\",\"string\"],\"source\":\"element NAME\"},{\"name\":\"STATUS\",\"type\":[\"null\",\"string\"],\"source\":\"element STATUS\"},{\"name\":\"START_TIME\",\"type\":[\"null\",\"long\"],\"source\":\"element START_TIME\"},{\"name\":\"END_TIME\",\"type\":[\"null\",\"long\"],\"source\":\"element END_TIME\"},{\"name\":\"RESOURCE_ID\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"source\":\"element RESOURCE_ID\"},{\"name\":\"PARENT_MISSION_ID\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"source\":\"element PARENT_MISSION_ID\"},{\"name\":\"CHILD_MISSION_ID\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"source\":\"element CHILD_MISSION_ID\"},{\"name\":\"POSITION\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"POSITION\",\"fields\":[{\"name\":\"LOC_ID\",\"type\":[\"null\",\"string\"],\"source\":\"element LOC_ID\"},{\"name\":\"NAME\",\"type\":[\"null\",\"string\"],\"source\":\"element NAME\"},{\"name\":\"TYPE\",\"type\":[\"null\",\"string\"],\"source\":\"element TYPE\"},{\"name\":\"COORDSYS\",\"type\":[\"null\",\"string\"],\"source\":\"element COORDSYS\"},{\"name\":\"COORD\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"COORDType\",\"fields\":[{\"name\":\"LAT\",\"type\":\"double\",\"source\":\"element LAT\"},{\"name\":\"LON\",\"type\":\"double\",\"source\":\"element LON\"},{\"name\":\"HEIGHT\",\"type\":[\"null\",\"double\"],\"source\":\"element HEIGHT\"}]}},\"source\":\"element COORD\"},{\"name\":\"HEIGHT_ROLE\",\"type\":[\"null\",\"string\"],\"source\":\"element HEIGHT_ROLE\"},{\"name\":\"ADDRESS\",\"type\":{\"type\":\"array\",\"items\":\"string\"},\"source\":\"element ADDRESS\"}]}],\"source\":\"element POSITION\"},{\"name\":\"PRIORITY\",\"type\":[\"null\",\"string\"],\"source\":\"element PRIORITY\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MISSION> ENCODER =
      new BinaryMessageEncoder<MISSION>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MISSION> DECODER =
      new BinaryMessageDecoder<MISSION>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MISSION> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MISSION> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MISSION>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MISSION to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MISSION from a ByteBuffer. */
  public static MISSION fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.util.List<java.lang.CharSequence> TYPE;
  @Deprecated public java.lang.CharSequence FREETEXT;
  @Deprecated public java.lang.CharSequence ID;
  @Deprecated public java.lang.CharSequence MAIN_MISSION_ID;
  @Deprecated public java.lang.CharSequence ORG_ID;
  @Deprecated public java.lang.CharSequence NAME;
  @Deprecated public java.lang.CharSequence STATUS;
  @Deprecated public java.lang.Long START_TIME;
  @Deprecated public java.lang.Long END_TIME;
  @Deprecated public java.util.List<java.lang.CharSequence> RESOURCE_ID;
  @Deprecated public java.util.List<java.lang.CharSequence> PARENT_MISSION_ID;
  @Deprecated public java.util.List<java.lang.CharSequence> CHILD_MISSION_ID;
  @Deprecated public eu.driver.model.emsi.POSITION POSITION;
  @Deprecated public java.lang.CharSequence PRIORITY;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MISSION() {}

  /**
   * All-args constructor.
   * @param TYPE The new value for TYPE
   * @param FREETEXT The new value for FREETEXT
   * @param ID The new value for ID
   * @param MAIN_MISSION_ID The new value for MAIN_MISSION_ID
   * @param ORG_ID The new value for ORG_ID
   * @param NAME The new value for NAME
   * @param STATUS The new value for STATUS
   * @param START_TIME The new value for START_TIME
   * @param END_TIME The new value for END_TIME
   * @param RESOURCE_ID The new value for RESOURCE_ID
   * @param PARENT_MISSION_ID The new value for PARENT_MISSION_ID
   * @param CHILD_MISSION_ID The new value for CHILD_MISSION_ID
   * @param POSITION The new value for POSITION
   * @param PRIORITY The new value for PRIORITY
   */
  public MISSION(java.util.List<java.lang.CharSequence> TYPE, java.lang.CharSequence FREETEXT, java.lang.CharSequence ID, java.lang.CharSequence MAIN_MISSION_ID, java.lang.CharSequence ORG_ID, java.lang.CharSequence NAME, java.lang.CharSequence STATUS, java.lang.Long START_TIME, java.lang.Long END_TIME, java.util.List<java.lang.CharSequence> RESOURCE_ID, java.util.List<java.lang.CharSequence> PARENT_MISSION_ID, java.util.List<java.lang.CharSequence> CHILD_MISSION_ID, eu.driver.model.emsi.POSITION POSITION, java.lang.CharSequence PRIORITY) {
    this.TYPE = TYPE;
    this.FREETEXT = FREETEXT;
    this.ID = ID;
    this.MAIN_MISSION_ID = MAIN_MISSION_ID;
    this.ORG_ID = ORG_ID;
    this.NAME = NAME;
    this.STATUS = STATUS;
    this.START_TIME = START_TIME;
    this.END_TIME = END_TIME;
    this.RESOURCE_ID = RESOURCE_ID;
    this.PARENT_MISSION_ID = PARENT_MISSION_ID;
    this.CHILD_MISSION_ID = CHILD_MISSION_ID;
    this.POSITION = POSITION;
    this.PRIORITY = PRIORITY;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return TYPE;
    case 1: return FREETEXT;
    case 2: return ID;
    case 3: return MAIN_MISSION_ID;
    case 4: return ORG_ID;
    case 5: return NAME;
    case 6: return STATUS;
    case 7: return START_TIME;
    case 8: return END_TIME;
    case 9: return RESOURCE_ID;
    case 10: return PARENT_MISSION_ID;
    case 11: return CHILD_MISSION_ID;
    case 12: return POSITION;
    case 13: return PRIORITY;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: TYPE = (java.util.List<java.lang.CharSequence>)value$; break;
    case 1: FREETEXT = (java.lang.CharSequence)value$; break;
    case 2: ID = (java.lang.CharSequence)value$; break;
    case 3: MAIN_MISSION_ID = (java.lang.CharSequence)value$; break;
    case 4: ORG_ID = (java.lang.CharSequence)value$; break;
    case 5: NAME = (java.lang.CharSequence)value$; break;
    case 6: STATUS = (java.lang.CharSequence)value$; break;
    case 7: START_TIME = (java.lang.Long)value$; break;
    case 8: END_TIME = (java.lang.Long)value$; break;
    case 9: RESOURCE_ID = (java.util.List<java.lang.CharSequence>)value$; break;
    case 10: PARENT_MISSION_ID = (java.util.List<java.lang.CharSequence>)value$; break;
    case 11: CHILD_MISSION_ID = (java.util.List<java.lang.CharSequence>)value$; break;
    case 12: POSITION = (eu.driver.model.emsi.POSITION)value$; break;
    case 13: PRIORITY = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'TYPE' field.
   * @return The value of the 'TYPE' field.
   */
  public java.util.List<java.lang.CharSequence> getTYPE() {
    return TYPE;
  }

  /**
   * Sets the value of the 'TYPE' field.
   * @param value the value to set.
   */
  public void setTYPE(java.util.List<java.lang.CharSequence> value) {
    this.TYPE = value;
  }

  /**
   * Gets the value of the 'FREETEXT' field.
   * @return The value of the 'FREETEXT' field.
   */
  public java.lang.CharSequence getFREETEXT() {
    return FREETEXT;
  }

  /**
   * Sets the value of the 'FREETEXT' field.
   * @param value the value to set.
   */
  public void setFREETEXT(java.lang.CharSequence value) {
    this.FREETEXT = value;
  }

  /**
   * Gets the value of the 'ID' field.
   * @return The value of the 'ID' field.
   */
  public java.lang.CharSequence getID() {
    return ID;
  }

  /**
   * Sets the value of the 'ID' field.
   * @param value the value to set.
   */
  public void setID(java.lang.CharSequence value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'MAIN_MISSION_ID' field.
   * @return The value of the 'MAIN_MISSION_ID' field.
   */
  public java.lang.CharSequence getMAINMISSIONID() {
    return MAIN_MISSION_ID;
  }

  /**
   * Sets the value of the 'MAIN_MISSION_ID' field.
   * @param value the value to set.
   */
  public void setMAINMISSIONID(java.lang.CharSequence value) {
    this.MAIN_MISSION_ID = value;
  }

  /**
   * Gets the value of the 'ORG_ID' field.
   * @return The value of the 'ORG_ID' field.
   */
  public java.lang.CharSequence getORGID() {
    return ORG_ID;
  }

  /**
   * Sets the value of the 'ORG_ID' field.
   * @param value the value to set.
   */
  public void setORGID(java.lang.CharSequence value) {
    this.ORG_ID = value;
  }

  /**
   * Gets the value of the 'NAME' field.
   * @return The value of the 'NAME' field.
   */
  public java.lang.CharSequence getNAME() {
    return NAME;
  }

  /**
   * Sets the value of the 'NAME' field.
   * @param value the value to set.
   */
  public void setNAME(java.lang.CharSequence value) {
    this.NAME = value;
  }

  /**
   * Gets the value of the 'STATUS' field.
   * @return The value of the 'STATUS' field.
   */
  public java.lang.CharSequence getSTATUS() {
    return STATUS;
  }

  /**
   * Sets the value of the 'STATUS' field.
   * @param value the value to set.
   */
  public void setSTATUS(java.lang.CharSequence value) {
    this.STATUS = value;
  }

  /**
   * Gets the value of the 'START_TIME' field.
   * @return The value of the 'START_TIME' field.
   */
  public java.lang.Long getSTARTTIME() {
    return START_TIME;
  }

  /**
   * Sets the value of the 'START_TIME' field.
   * @param value the value to set.
   */
  public void setSTARTTIME(java.lang.Long value) {
    this.START_TIME = value;
  }

  /**
   * Gets the value of the 'END_TIME' field.
   * @return The value of the 'END_TIME' field.
   */
  public java.lang.Long getENDTIME() {
    return END_TIME;
  }

  /**
   * Sets the value of the 'END_TIME' field.
   * @param value the value to set.
   */
  public void setENDTIME(java.lang.Long value) {
    this.END_TIME = value;
  }

  /**
   * Gets the value of the 'RESOURCE_ID' field.
   * @return The value of the 'RESOURCE_ID' field.
   */
  public java.util.List<java.lang.CharSequence> getRESOURCEID() {
    return RESOURCE_ID;
  }

  /**
   * Sets the value of the 'RESOURCE_ID' field.
   * @param value the value to set.
   */
  public void setRESOURCEID(java.util.List<java.lang.CharSequence> value) {
    this.RESOURCE_ID = value;
  }

  /**
   * Gets the value of the 'PARENT_MISSION_ID' field.
   * @return The value of the 'PARENT_MISSION_ID' field.
   */
  public java.util.List<java.lang.CharSequence> getPARENTMISSIONID() {
    return PARENT_MISSION_ID;
  }

  /**
   * Sets the value of the 'PARENT_MISSION_ID' field.
   * @param value the value to set.
   */
  public void setPARENTMISSIONID(java.util.List<java.lang.CharSequence> value) {
    this.PARENT_MISSION_ID = value;
  }

  /**
   * Gets the value of the 'CHILD_MISSION_ID' field.
   * @return The value of the 'CHILD_MISSION_ID' field.
   */
  public java.util.List<java.lang.CharSequence> getCHILDMISSIONID() {
    return CHILD_MISSION_ID;
  }

  /**
   * Sets the value of the 'CHILD_MISSION_ID' field.
   * @param value the value to set.
   */
  public void setCHILDMISSIONID(java.util.List<java.lang.CharSequence> value) {
    this.CHILD_MISSION_ID = value;
  }

  /**
   * Gets the value of the 'POSITION' field.
   * @return The value of the 'POSITION' field.
   */
  public eu.driver.model.emsi.POSITION getPOSITION() {
    return POSITION;
  }

  /**
   * Sets the value of the 'POSITION' field.
   * @param value the value to set.
   */
  public void setPOSITION(eu.driver.model.emsi.POSITION value) {
    this.POSITION = value;
  }

  /**
   * Gets the value of the 'PRIORITY' field.
   * @return The value of the 'PRIORITY' field.
   */
  public java.lang.CharSequence getPRIORITY() {
    return PRIORITY;
  }

  /**
   * Sets the value of the 'PRIORITY' field.
   * @param value the value to set.
   */
  public void setPRIORITY(java.lang.CharSequence value) {
    this.PRIORITY = value;
  }

  /**
   * Creates a new MISSION RecordBuilder.
   * @return A new MISSION RecordBuilder
   */
  public static eu.driver.model.emsi.MISSION.Builder newBuilder() {
    return new eu.driver.model.emsi.MISSION.Builder();
  }

  /**
   * Creates a new MISSION RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MISSION RecordBuilder
   */
  public static eu.driver.model.emsi.MISSION.Builder newBuilder(eu.driver.model.emsi.MISSION.Builder other) {
    return new eu.driver.model.emsi.MISSION.Builder(other);
  }

  /**
   * Creates a new MISSION RecordBuilder by copying an existing MISSION instance.
   * @param other The existing instance to copy.
   * @return A new MISSION RecordBuilder
   */
  public static eu.driver.model.emsi.MISSION.Builder newBuilder(eu.driver.model.emsi.MISSION other) {
    return new eu.driver.model.emsi.MISSION.Builder(other);
  }

  /**
   * RecordBuilder for MISSION instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MISSION>
    implements org.apache.avro.data.RecordBuilder<MISSION> {

    private java.util.List<java.lang.CharSequence> TYPE;
    private java.lang.CharSequence FREETEXT;
    private java.lang.CharSequence ID;
    private java.lang.CharSequence MAIN_MISSION_ID;
    private java.lang.CharSequence ORG_ID;
    private java.lang.CharSequence NAME;
    private java.lang.CharSequence STATUS;
    private java.lang.Long START_TIME;
    private java.lang.Long END_TIME;
    private java.util.List<java.lang.CharSequence> RESOURCE_ID;
    private java.util.List<java.lang.CharSequence> PARENT_MISSION_ID;
    private java.util.List<java.lang.CharSequence> CHILD_MISSION_ID;
    private eu.driver.model.emsi.POSITION POSITION;
    private eu.driver.model.emsi.POSITION.Builder POSITIONBuilder;
    private java.lang.CharSequence PRIORITY;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(eu.driver.model.emsi.MISSION.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.TYPE)) {
        this.TYPE = data().deepCopy(fields()[0].schema(), other.TYPE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.FREETEXT)) {
        this.FREETEXT = data().deepCopy(fields()[1].schema(), other.FREETEXT);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ID)) {
        this.ID = data().deepCopy(fields()[2].schema(), other.ID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.MAIN_MISSION_ID)) {
        this.MAIN_MISSION_ID = data().deepCopy(fields()[3].schema(), other.MAIN_MISSION_ID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ORG_ID)) {
        this.ORG_ID = data().deepCopy(fields()[4].schema(), other.ORG_ID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.NAME)) {
        this.NAME = data().deepCopy(fields()[5].schema(), other.NAME);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.STATUS)) {
        this.STATUS = data().deepCopy(fields()[6].schema(), other.STATUS);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.START_TIME)) {
        this.START_TIME = data().deepCopy(fields()[7].schema(), other.START_TIME);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.END_TIME)) {
        this.END_TIME = data().deepCopy(fields()[8].schema(), other.END_TIME);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.RESOURCE_ID)) {
        this.RESOURCE_ID = data().deepCopy(fields()[9].schema(), other.RESOURCE_ID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PARENT_MISSION_ID)) {
        this.PARENT_MISSION_ID = data().deepCopy(fields()[10].schema(), other.PARENT_MISSION_ID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.CHILD_MISSION_ID)) {
        this.CHILD_MISSION_ID = data().deepCopy(fields()[11].schema(), other.CHILD_MISSION_ID);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.POSITION)) {
        this.POSITION = data().deepCopy(fields()[12].schema(), other.POSITION);
        fieldSetFlags()[12] = true;
      }
      if (other.hasPOSITIONBuilder()) {
        this.POSITIONBuilder = eu.driver.model.emsi.POSITION.newBuilder(other.getPOSITIONBuilder());
      }
      if (isValidValue(fields()[13], other.PRIORITY)) {
        this.PRIORITY = data().deepCopy(fields()[13].schema(), other.PRIORITY);
        fieldSetFlags()[13] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MISSION instance
     * @param other The existing instance to copy.
     */
    private Builder(eu.driver.model.emsi.MISSION other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.TYPE)) {
        this.TYPE = data().deepCopy(fields()[0].schema(), other.TYPE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.FREETEXT)) {
        this.FREETEXT = data().deepCopy(fields()[1].schema(), other.FREETEXT);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ID)) {
        this.ID = data().deepCopy(fields()[2].schema(), other.ID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.MAIN_MISSION_ID)) {
        this.MAIN_MISSION_ID = data().deepCopy(fields()[3].schema(), other.MAIN_MISSION_ID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ORG_ID)) {
        this.ORG_ID = data().deepCopy(fields()[4].schema(), other.ORG_ID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.NAME)) {
        this.NAME = data().deepCopy(fields()[5].schema(), other.NAME);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.STATUS)) {
        this.STATUS = data().deepCopy(fields()[6].schema(), other.STATUS);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.START_TIME)) {
        this.START_TIME = data().deepCopy(fields()[7].schema(), other.START_TIME);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.END_TIME)) {
        this.END_TIME = data().deepCopy(fields()[8].schema(), other.END_TIME);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.RESOURCE_ID)) {
        this.RESOURCE_ID = data().deepCopy(fields()[9].schema(), other.RESOURCE_ID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PARENT_MISSION_ID)) {
        this.PARENT_MISSION_ID = data().deepCopy(fields()[10].schema(), other.PARENT_MISSION_ID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.CHILD_MISSION_ID)) {
        this.CHILD_MISSION_ID = data().deepCopy(fields()[11].schema(), other.CHILD_MISSION_ID);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.POSITION)) {
        this.POSITION = data().deepCopy(fields()[12].schema(), other.POSITION);
        fieldSetFlags()[12] = true;
      }
      this.POSITIONBuilder = null;
      if (isValidValue(fields()[13], other.PRIORITY)) {
        this.PRIORITY = data().deepCopy(fields()[13].schema(), other.PRIORITY);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'TYPE' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getTYPE() {
      return TYPE;
    }

    /**
      * Sets the value of the 'TYPE' field.
      * @param value The value of 'TYPE'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setTYPE(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.TYPE = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'TYPE' field has been set.
      * @return True if the 'TYPE' field has been set, false otherwise.
      */
    public boolean hasTYPE() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'TYPE' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearTYPE() {
      TYPE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'FREETEXT' field.
      * @return The value.
      */
    public java.lang.CharSequence getFREETEXT() {
      return FREETEXT;
    }

    /**
      * Sets the value of the 'FREETEXT' field.
      * @param value The value of 'FREETEXT'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setFREETEXT(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.FREETEXT = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'FREETEXT' field has been set.
      * @return True if the 'FREETEXT' field has been set, false otherwise.
      */
    public boolean hasFREETEXT() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'FREETEXT' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearFREETEXT() {
      FREETEXT = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getID() {
      return ID;
    }

    /**
      * Sets the value of the 'ID' field.
      * @param value The value of 'ID'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setID(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ID' field has been set.
      * @return True if the 'ID' field has been set, false otherwise.
      */
    public boolean hasID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ID' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearID() {
      ID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'MAIN_MISSION_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getMAINMISSIONID() {
      return MAIN_MISSION_ID;
    }

    /**
      * Sets the value of the 'MAIN_MISSION_ID' field.
      * @param value The value of 'MAIN_MISSION_ID'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setMAINMISSIONID(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.MAIN_MISSION_ID = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'MAIN_MISSION_ID' field has been set.
      * @return True if the 'MAIN_MISSION_ID' field has been set, false otherwise.
      */
    public boolean hasMAINMISSIONID() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'MAIN_MISSION_ID' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearMAINMISSIONID() {
      MAIN_MISSION_ID = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ORG_ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getORGID() {
      return ORG_ID;
    }

    /**
      * Sets the value of the 'ORG_ID' field.
      * @param value The value of 'ORG_ID'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setORGID(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.ORG_ID = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ORG_ID' field has been set.
      * @return True if the 'ORG_ID' field has been set, false otherwise.
      */
    public boolean hasORGID() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ORG_ID' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearORGID() {
      ORG_ID = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'NAME' field.
      * @return The value.
      */
    public java.lang.CharSequence getNAME() {
      return NAME;
    }

    /**
      * Sets the value of the 'NAME' field.
      * @param value The value of 'NAME'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setNAME(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.NAME = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'NAME' field has been set.
      * @return True if the 'NAME' field has been set, false otherwise.
      */
    public boolean hasNAME() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'NAME' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearNAME() {
      NAME = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'STATUS' field.
      * @return The value.
      */
    public java.lang.CharSequence getSTATUS() {
      return STATUS;
    }

    /**
      * Sets the value of the 'STATUS' field.
      * @param value The value of 'STATUS'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setSTATUS(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.STATUS = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'STATUS' field has been set.
      * @return True if the 'STATUS' field has been set, false otherwise.
      */
    public boolean hasSTATUS() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'STATUS' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearSTATUS() {
      STATUS = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'START_TIME' field.
      * @return The value.
      */
    public java.lang.Long getSTARTTIME() {
      return START_TIME;
    }

    /**
      * Sets the value of the 'START_TIME' field.
      * @param value The value of 'START_TIME'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setSTARTTIME(java.lang.Long value) {
      validate(fields()[7], value);
      this.START_TIME = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'START_TIME' field has been set.
      * @return True if the 'START_TIME' field has been set, false otherwise.
      */
    public boolean hasSTARTTIME() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'START_TIME' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearSTARTTIME() {
      START_TIME = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'END_TIME' field.
      * @return The value.
      */
    public java.lang.Long getENDTIME() {
      return END_TIME;
    }

    /**
      * Sets the value of the 'END_TIME' field.
      * @param value The value of 'END_TIME'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setENDTIME(java.lang.Long value) {
      validate(fields()[8], value);
      this.END_TIME = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'END_TIME' field has been set.
      * @return True if the 'END_TIME' field has been set, false otherwise.
      */
    public boolean hasENDTIME() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'END_TIME' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearENDTIME() {
      END_TIME = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'RESOURCE_ID' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getRESOURCEID() {
      return RESOURCE_ID;
    }

    /**
      * Sets the value of the 'RESOURCE_ID' field.
      * @param value The value of 'RESOURCE_ID'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setRESOURCEID(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[9], value);
      this.RESOURCE_ID = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'RESOURCE_ID' field has been set.
      * @return True if the 'RESOURCE_ID' field has been set, false otherwise.
      */
    public boolean hasRESOURCEID() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'RESOURCE_ID' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearRESOURCEID() {
      RESOURCE_ID = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'PARENT_MISSION_ID' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getPARENTMISSIONID() {
      return PARENT_MISSION_ID;
    }

    /**
      * Sets the value of the 'PARENT_MISSION_ID' field.
      * @param value The value of 'PARENT_MISSION_ID'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setPARENTMISSIONID(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[10], value);
      this.PARENT_MISSION_ID = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'PARENT_MISSION_ID' field has been set.
      * @return True if the 'PARENT_MISSION_ID' field has been set, false otherwise.
      */
    public boolean hasPARENTMISSIONID() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'PARENT_MISSION_ID' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearPARENTMISSIONID() {
      PARENT_MISSION_ID = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'CHILD_MISSION_ID' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getCHILDMISSIONID() {
      return CHILD_MISSION_ID;
    }

    /**
      * Sets the value of the 'CHILD_MISSION_ID' field.
      * @param value The value of 'CHILD_MISSION_ID'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setCHILDMISSIONID(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[11], value);
      this.CHILD_MISSION_ID = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'CHILD_MISSION_ID' field has been set.
      * @return True if the 'CHILD_MISSION_ID' field has been set, false otherwise.
      */
    public boolean hasCHILDMISSIONID() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'CHILD_MISSION_ID' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearCHILDMISSIONID() {
      CHILD_MISSION_ID = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'POSITION' field.
      * @return The value.
      */
    public eu.driver.model.emsi.POSITION getPOSITION() {
      return POSITION;
    }

    /**
      * Sets the value of the 'POSITION' field.
      * @param value The value of 'POSITION'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setPOSITION(eu.driver.model.emsi.POSITION value) {
      validate(fields()[12], value);
      this.POSITIONBuilder = null;
      this.POSITION = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'POSITION' field has been set.
      * @return True if the 'POSITION' field has been set, false otherwise.
      */
    public boolean hasPOSITION() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'POSITION' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public eu.driver.model.emsi.POSITION.Builder getPOSITIONBuilder() {
      if (POSITIONBuilder == null) {
        if (hasPOSITION()) {
          setPOSITIONBuilder(eu.driver.model.emsi.POSITION.newBuilder(POSITION));
        } else {
          setPOSITIONBuilder(eu.driver.model.emsi.POSITION.newBuilder());
        }
      }
      return POSITIONBuilder;
    }

    /**
     * Sets the Builder instance for the 'POSITION' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public eu.driver.model.emsi.MISSION.Builder setPOSITIONBuilder(eu.driver.model.emsi.POSITION.Builder value) {
      clearPOSITION();
      POSITIONBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'POSITION' field has an active Builder instance
     * @return True if the 'POSITION' field has an active Builder instance
     */
    public boolean hasPOSITIONBuilder() {
      return POSITIONBuilder != null;
    }

    /**
      * Clears the value of the 'POSITION' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearPOSITION() {
      POSITION = null;
      POSITIONBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'PRIORITY' field.
      * @return The value.
      */
    public java.lang.CharSequence getPRIORITY() {
      return PRIORITY;
    }

    /**
      * Sets the value of the 'PRIORITY' field.
      * @param value The value of 'PRIORITY'.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder setPRIORITY(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.PRIORITY = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'PRIORITY' field has been set.
      * @return True if the 'PRIORITY' field has been set, false otherwise.
      */
    public boolean hasPRIORITY() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'PRIORITY' field.
      * @return This builder.
      */
    public eu.driver.model.emsi.MISSION.Builder clearPRIORITY() {
      PRIORITY = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MISSION build() {
      try {
        MISSION record = new MISSION();
        record.TYPE = fieldSetFlags()[0] ? this.TYPE : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        record.FREETEXT = fieldSetFlags()[1] ? this.FREETEXT : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ID = fieldSetFlags()[2] ? this.ID : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.MAIN_MISSION_ID = fieldSetFlags()[3] ? this.MAIN_MISSION_ID : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ORG_ID = fieldSetFlags()[4] ? this.ORG_ID : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.NAME = fieldSetFlags()[5] ? this.NAME : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.STATUS = fieldSetFlags()[6] ? this.STATUS : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.START_TIME = fieldSetFlags()[7] ? this.START_TIME : (java.lang.Long) defaultValue(fields()[7]);
        record.END_TIME = fieldSetFlags()[8] ? this.END_TIME : (java.lang.Long) defaultValue(fields()[8]);
        record.RESOURCE_ID = fieldSetFlags()[9] ? this.RESOURCE_ID : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[9]);
        record.PARENT_MISSION_ID = fieldSetFlags()[10] ? this.PARENT_MISSION_ID : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[10]);
        record.CHILD_MISSION_ID = fieldSetFlags()[11] ? this.CHILD_MISSION_ID : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[11]);
        if (POSITIONBuilder != null) {
          record.POSITION = this.POSITIONBuilder.build();
        } else {
          record.POSITION = fieldSetFlags()[12] ? this.POSITION : (eu.driver.model.emsi.POSITION) defaultValue(fields()[12]);
        }
        record.PRIORITY = fieldSetFlags()[13] ? this.PRIORITY : (java.lang.CharSequence) defaultValue(fields()[13]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MISSION>
    WRITER$ = (org.apache.avro.io.DatumWriter<MISSION>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MISSION>
    READER$ = (org.apache.avro.io.DatumReader<MISSION>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
